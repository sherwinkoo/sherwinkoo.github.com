---
layout: post
title: SSH远程端口转发
date: 2015-01-02 18:56:01
categories: Linux
---
<h1 id="一、SSH远程端口转发技术">一、SSH远程端口转发技术</h1>
<h2 id="1-_场景需求">1. 场景需求</h2>
<p>有台外网服务器A，一台内网机器B；也就是说B可以访问A，但是A是无法访问B的。由于做微信开发，微信服务器会推送消息到指定URL，所以必须得在外网机器中才能进行测试，但是直接在外网机器中做开发是不现实的，那么问题来了：端口转发哪家强？</p>
<h2 id="2-_原理">2. 原理</h2>
<p>通过搜索，查看SSH的手册，以及多次的实验，终于明白了使用SSH进行端口转发的方法。在介绍SSH的端口转发之前，我们可以自己思考一下，该如何实现这样一个功能：访问A的8000端口就可以访问到B的8888端口，所有发送到A:8000的数据都会原封不动地转发到B:8888</p>
<ol>
<li>在A上必然有一个程序在监听8000端口，每当有连接或者数据过来的时候，他就对B的8888发起连接或者发送数据</li>
<li>由于A无法访问到B，那么必须得B主动在A和B之间建一个持久的连接，这里称之为Turnnel（隧道），A就是隧道的上游（TUp），B为下游TDown</li>
<li>当有一个程序连接到A:8000的时候（把这个连接编号为CS1），TUp就可以通过Turnnel通知TDown过来一个新的连接需要转发，TDown就主动对B:8888发起连接（CC1），这里CS1和CS2就是对应的，也就是说CS1中的数据都应该发送到CC1，CC1中的数据也应该发送到CS1</li>
</ol>
<p>总结一下：A中需要监听两个端口，一个8000用来转发，一个xxxx用来供B连接；B中需要运行一个程序用来发起对B:8888进行连接</p>
<h2 id="3-_SSH的实现">3. SSH的实现</h2>
<p>使用SSH来从B登录到A的时候，必然需要B来主动向A发起一条持久的TCP连接，这条连接就可以用来做Turnnel；ssh包括一个server和一个client，这样也就满足了上边分析的条件了server可以监听8000，client用来连接B的8888</p>
<p>使用ssh建立端口转发非常简单，只需要在B中执行</p>
<pre><code>ssh -R <span class="string">[[A]]</span>:<span class="number">8000</span>:[B]:<span class="number">8888</span> user@[A]
</code></pre><blockquote>
<p>[A],[B]分别表示A和B的IP地址</p>
<p>上述命令中A的地址可以省略</p>
<p>[A]中默认会绑定在回环地址上，通过指定IP可以使其绑定在其他可用地址</p>
</blockquote>
<p>这时候如果去访问A:8000就可以看到B:8888接到了新的连接，这样一条SSH远程端口转发就完成了</p>
<h2 id="4-_结束语">4. 结束语</h2>
<p>根据上面的分析，自己也可以写一个简单的程序来完成类似的功能</p>
 
